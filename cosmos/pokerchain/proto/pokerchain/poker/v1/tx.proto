syntax = "proto3";

package pokerchain.poker.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "pokerchain/poker/v1/params.proto";

option go_package = "github.com/yourusername/pokerchain/x/poker/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateGame defines the CreateGame RPC.
  rpc CreateGame(MsgCreateGame) returns (MsgCreateGameResponse);

  // JoinGame defines the JoinGame RPC.
  rpc JoinGame(MsgJoinGame) returns (MsgJoinGameResponse);

  // LeaveGame defines the LeaveGame RPC.
  rpc LeaveGame(MsgLeaveGame) returns (MsgLeaveGameResponse);

  // DealCards defines the DealCards RPC.
  rpc DealCards(MsgDealCards) returns (MsgDealCardsResponse);

  // PostSmallBlind defines the PostSmallBlind RPC.
  rpc PostSmallBlind(MsgPostSmallBlind) returns (MsgPostSmallBlindResponse);

  // PostBigBlind defines the PostBigBlind RPC.
  rpc PostBigBlind(MsgPostBigBlind) returns (MsgPostBigBlindResponse);

  // Fold defines the Fold RPC.
  rpc Fold(MsgFold) returns (MsgFoldResponse);

  // Check defines the Check RPC.
  rpc Check(MsgCheck) returns (MsgCheckResponse);

  // Bet defines the Bet RPC.
  rpc Bet(MsgBet) returns (MsgBetResponse);

  // Call defines the Call RPC.
  rpc Call(MsgCall) returns (MsgCallResponse);

  // Raise defines the Raise RPC.
  rpc Raise(MsgRaise) returns (MsgRaiseResponse);

  // ShowCards defines the ShowCards RPC.
  rpc ShowCards(MsgShowCards) returns (MsgShowCardsResponse);

  // MuckCards defines the MuckCards RPC.
  rpc MuckCards(MsgMuckCards) returns (MsgMuckCardsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "pokerchain/x/poker/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreateGame defines the MsgCreateGame message.
message MsgCreateGame {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 min_buy_in = 2;
  uint64 max_buy_in = 3;
  uint64 small_blind = 4;
  uint64 big_blind = 5;
  uint64 max_players = 6;
  uint64 min_players = 7;
}

// MsgCreateGameResponse defines the MsgCreateGameResponse message.
message MsgCreateGameResponse {}

// MsgJoinGame defines the MsgJoinGame message.
message MsgJoinGame {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
  uint64 seat = 3;
  uint64 buy_in = 4;
}

// MsgJoinGameResponse defines the MsgJoinGameResponse message.
message MsgJoinGameResponse {}

// MsgLeaveGame defines the MsgLeaveGame message.
message MsgLeaveGame {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgLeaveGameResponse defines the MsgLeaveGameResponse message.
message MsgLeaveGameResponse {}

// MsgDealCards defines the MsgDealCards message.
message MsgDealCards {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgDealCardsResponse defines the MsgDealCardsResponse message.
message MsgDealCardsResponse {}

// MsgPostSmallBlind defines the MsgPostSmallBlind message.
message MsgPostSmallBlind {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgPostSmallBlindResponse defines the MsgPostSmallBlindResponse message.
message MsgPostSmallBlindResponse {}

// MsgPostBigBlind defines the MsgPostBigBlind message.
message MsgPostBigBlind {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgPostBigBlindResponse defines the MsgPostBigBlindResponse message.
message MsgPostBigBlindResponse {}

// MsgFold defines the MsgFold message.
message MsgFold {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgFoldResponse defines the MsgFoldResponse message.
message MsgFoldResponse {}

// MsgCheck defines the MsgCheck message.
message MsgCheck {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgCheckResponse defines the MsgCheckResponse message.
message MsgCheckResponse {}

// MsgBet defines the MsgBet message.
message MsgBet {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
  uint64 amount = 3;
}

// MsgBetResponse defines the MsgBetResponse message.
message MsgBetResponse {}

// MsgCall defines the MsgCall message.
message MsgCall {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgCallResponse defines the MsgCallResponse message.
message MsgCallResponse {}

// MsgRaise defines the MsgRaise message.
message MsgRaise {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
  uint64 amount = 3;
}

// MsgRaiseResponse defines the MsgRaiseResponse message.
message MsgRaiseResponse {}

// MsgShowCards defines the MsgShowCards message.
message MsgShowCards {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgShowCardsResponse defines the MsgShowCardsResponse message.
message MsgShowCardsResponse {}

// MsgMuckCards defines the MsgMuckCards message.
message MsgMuckCards {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 game_id = 2;
}

// MsgMuckCardsResponse defines the MsgMuckCardsResponse message.
message MsgMuckCardsResponse {}
